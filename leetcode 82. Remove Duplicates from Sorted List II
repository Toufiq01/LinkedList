/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode fakeHead = new ListNode(0);
        
        fakeHead.next = head;
        ListNode curr = fakeHead;
        while(curr.next != null && curr.next.next != null) {
            if(curr.next.val != curr.next.next.val){
                curr =curr.next;
            } else {
                int dublicate = curr.next.val;
                while(curr.next !=null && curr.next.val == dublicate){  // corner case [1,1]
                    curr.next = curr.next.next;
                }
            }
        }
        return fakeHead.next;
    }
}
// Runtime: 0 ms, faster than 100.00% of Java online submissions for Remove Duplicates from Sorted List II.
// Memory Usage: 38 MB, less than 95.37% of Java online submissions for Remove Duplicates from Sorted List II.
